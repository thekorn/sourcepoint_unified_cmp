// Mocks generated by Mockito 5.4.4 from annotations
// in sourcepoint_unified_cmp_flutter_inappwebview_extension/test/sourcepoint_unified_cmp_flutter_inappwebview_extension_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:typed_data' as _i8;
import 'dart:ui' as _i11;

import 'package:flutter_inappwebview/src/in_app_webview/android/in_app_webview_controller.dart'
    as _i2;
import 'package:flutter_inappwebview/src/in_app_webview/apple/in_app_webview_controller.dart'
    as _i3;
import 'package:flutter_inappwebview/src/in_app_webview/in_app_webview_controller.dart'
    as _i6;
import 'package:flutter_inappwebview/src/print_job/main.dart' as _i10;
import 'package:flutter_inappwebview/src/web_message/main.dart' as _i12;
import 'package:flutter_inappwebview/src/web_storage/web_storage.dart' as _i5;
import 'package:flutter_inappwebview_platform_interface/flutter_inappwebview_platform_interface.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAndroidInAppWebViewController_0 extends _i1.SmartFake
    implements _i2.AndroidInAppWebViewController {
  _FakeAndroidInAppWebViewController_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSInAppWebViewController_1 extends _i1.SmartFake
    implements _i3.IOSInAppWebViewController {
  _FakeIOSInAppWebViewController_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePlatformInAppWebViewController_2 extends _i1.SmartFake
    implements _i4.PlatformInAppWebViewController {
  _FakePlatformInAppWebViewController_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebStorage_3 extends _i1.SmartFake implements _i5.WebStorage {
  _FakeWebStorage_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InAppWebViewController].
///
/// See the documentation for Mockito's code generation for more information.
class MockInAppWebViewController extends _i1.Mock
    implements _i6.InAppWebViewController {
  @override
  _i2.AndroidInAppWebViewController get android => (super.noSuchMethod(
        Invocation.getter(#android),
        returnValue: _FakeAndroidInAppWebViewController_0(
          this,
          Invocation.getter(#android),
        ),
        returnValueForMissingStub: _FakeAndroidInAppWebViewController_0(
          this,
          Invocation.getter(#android),
        ),
      ) as _i2.AndroidInAppWebViewController);

  @override
  set android(_i2.AndroidInAppWebViewController? _android) =>
      super.noSuchMethod(
        Invocation.setter(
          #android,
          _android,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.IOSInAppWebViewController get ios => (super.noSuchMethod(
        Invocation.getter(#ios),
        returnValue: _FakeIOSInAppWebViewController_1(
          this,
          Invocation.getter(#ios),
        ),
        returnValueForMissingStub: _FakeIOSInAppWebViewController_1(
          this,
          Invocation.getter(#ios),
        ),
      ) as _i3.IOSInAppWebViewController);

  @override
  set ios(_i3.IOSInAppWebViewController? _ios) => super.noSuchMethod(
        Invocation.setter(
          #ios,
          _ios,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.PlatformInAppWebViewController get platform => (super.noSuchMethod(
        Invocation.getter(#platform),
        returnValue: _FakePlatformInAppWebViewController_2(
          this,
          Invocation.getter(#platform),
        ),
        returnValueForMissingStub: _FakePlatformInAppWebViewController_2(
          this,
          Invocation.getter(#platform),
        ),
      ) as _i4.PlatformInAppWebViewController);

  @override
  _i5.WebStorage get webStorage => (super.noSuchMethod(
        Invocation.getter(#webStorage),
        returnValue: _FakeWebStorage_3(
          this,
          Invocation.getter(#webStorage),
        ),
        returnValueForMissingStub: _FakeWebStorage_3(
          this,
          Invocation.getter(#webStorage),
        ),
      ) as _i5.WebStorage);

  @override
  _i7.Future<_i4.WebUri?> getUrl() => (super.noSuchMethod(
        Invocation.method(
          #getUrl,
          [],
        ),
        returnValue: _i7.Future<_i4.WebUri?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.WebUri?>.value(),
      ) as _i7.Future<_i4.WebUri?>);

  @override
  _i7.Future<String?> getTitle() => (super.noSuchMethod(
        Invocation.method(
          #getTitle,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<int?> getProgress() => (super.noSuchMethod(
        Invocation.method(
          #getProgress,
          [],
        ),
        returnValue: _i7.Future<int?>.value(),
        returnValueForMissingStub: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<String?> getHtml() => (super.noSuchMethod(
        Invocation.method(
          #getHtml,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<List<_i4.Favicon>> getFavicons() => (super.noSuchMethod(
        Invocation.method(
          #getFavicons,
          [],
        ),
        returnValue: _i7.Future<List<_i4.Favicon>>.value(<_i4.Favicon>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i4.Favicon>>.value(<_i4.Favicon>[]),
      ) as _i7.Future<List<_i4.Favicon>>);

  @override
  _i7.Future<void> loadUrl({
    required _i4.URLRequest? urlRequest,
    Uri? iosAllowingReadAccessTo,
    _i4.WebUri? allowingReadAccessTo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadUrl,
          [],
          {
            #urlRequest: urlRequest,
            #iosAllowingReadAccessTo: iosAllowingReadAccessTo,
            #allowingReadAccessTo: allowingReadAccessTo,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> postUrl({
    required _i4.WebUri? url,
    required _i8.Uint8List? postData,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUrl,
          [],
          {
            #url: url,
            #postData: postData,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadData({
    required String? data,
    String? mimeType = r'text/html',
    String? encoding = r'utf8',
    _i4.WebUri? baseUrl,
    Uri? androidHistoryUrl,
    _i4.WebUri? historyUrl,
    Uri? iosAllowingReadAccessTo,
    _i4.WebUri? allowingReadAccessTo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadData,
          [],
          {
            #data: data,
            #mimeType: mimeType,
            #encoding: encoding,
            #baseUrl: baseUrl,
            #androidHistoryUrl: androidHistoryUrl,
            #historyUrl: historyUrl,
            #iosAllowingReadAccessTo: iosAllowingReadAccessTo,
            #allowingReadAccessTo: allowingReadAccessTo,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadFile({required String? assetFilePath}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadFile,
          [],
          {#assetFilePath: assetFilePath},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> goBack() => (super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> canGoBack() => (super.noSuchMethod(
        Invocation.method(
          #canGoBack,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> goForward() => (super.noSuchMethod(
        Invocation.method(
          #goForward,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> canGoForward() => (super.noSuchMethod(
        Invocation.method(
          #canGoForward,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> goBackOrForward({required int? steps}) =>
      (super.noSuchMethod(
        Invocation.method(
          #goBackOrForward,
          [],
          {#steps: steps},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> canGoBackOrForward({required int? steps}) =>
      (super.noSuchMethod(
        Invocation.method(
          #canGoBackOrForward,
          [],
          {#steps: steps},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> goTo({required _i4.WebHistoryItem? historyItem}) =>
      (super.noSuchMethod(
        Invocation.method(
          #goTo,
          [],
          {#historyItem: historyItem},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> isLoading() => (super.noSuchMethod(
        Invocation.method(
          #isLoading,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> stopLoading() => (super.noSuchMethod(
        Invocation.method(
          #stopLoading,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<dynamic> evaluateJavascript({
    required String? source,
    _i4.ContentWorld? contentWorld,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #evaluateJavascript,
          [],
          {
            #source: source,
            #contentWorld: contentWorld,
          },
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<void> injectJavascriptFileFromUrl({
    required _i4.WebUri? urlFile,
    _i4.ScriptHtmlTagAttributes? scriptHtmlTagAttributes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #injectJavascriptFileFromUrl,
          [],
          {
            #urlFile: urlFile,
            #scriptHtmlTagAttributes: scriptHtmlTagAttributes,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<dynamic> injectJavascriptFileFromAsset(
          {required String? assetFilePath}) =>
      (super.noSuchMethod(
        Invocation.method(
          #injectJavascriptFileFromAsset,
          [],
          {#assetFilePath: assetFilePath},
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<void> injectCSSCode({required String? source}) =>
      (super.noSuchMethod(
        Invocation.method(
          #injectCSSCode,
          [],
          {#source: source},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> injectCSSFileFromUrl({
    required _i4.WebUri? urlFile,
    _i4.CSSLinkHtmlTagAttributes? cssLinkHtmlTagAttributes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #injectCSSFileFromUrl,
          [],
          {
            #urlFile: urlFile,
            #cssLinkHtmlTagAttributes: cssLinkHtmlTagAttributes,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> injectCSSFileFromAsset({required String? assetFilePath}) =>
      (super.noSuchMethod(
        Invocation.method(
          #injectCSSFileFromAsset,
          [],
          {#assetFilePath: assetFilePath},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addJavaScriptHandler({
    required String? handlerName,
    required _i4.JavaScriptHandlerCallback? callback,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #addJavaScriptHandler,
          [],
          {
            #handlerName: handlerName,
            #callback: callback,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.JavaScriptHandlerCallback? removeJavaScriptHandler(
          {required String? handlerName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeJavaScriptHandler,
          [],
          {#handlerName: handlerName},
        ),
        returnValueForMissingStub: null,
      ) as _i4.JavaScriptHandlerCallback?);

  @override
  bool hasJavaScriptHandler({required String? handlerName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasJavaScriptHandler,
          [],
          {#handlerName: handlerName},
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<_i8.Uint8List?> takeScreenshot(
          {_i4.ScreenshotConfiguration? screenshotConfiguration}) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeScreenshot,
          [],
          {#screenshotConfiguration: screenshotConfiguration},
        ),
        returnValue: _i7.Future<_i8.Uint8List?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.Uint8List?>.value(),
      ) as _i7.Future<_i8.Uint8List?>);

  @override
  _i7.Future<void> setOptions(
          {required _i4.InAppWebViewGroupOptions? options}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setOptions,
          [],
          {#options: options},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.InAppWebViewGroupOptions?> getOptions() => (super.noSuchMethod(
        Invocation.method(
          #getOptions,
          [],
        ),
        returnValue: _i7.Future<_i4.InAppWebViewGroupOptions?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.InAppWebViewGroupOptions?>.value(),
      ) as _i7.Future<_i4.InAppWebViewGroupOptions?>);

  @override
  _i7.Future<void> setSettings({required _i4.InAppWebViewSettings? settings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSettings,
          [],
          {#settings: settings},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.InAppWebViewSettings?> getSettings() => (super.noSuchMethod(
        Invocation.method(
          #getSettings,
          [],
        ),
        returnValue: _i7.Future<_i4.InAppWebViewSettings?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.InAppWebViewSettings?>.value(),
      ) as _i7.Future<_i4.InAppWebViewSettings?>);

  @override
  _i7.Future<_i4.WebHistory?> getCopyBackForwardList() => (super.noSuchMethod(
        Invocation.method(
          #getCopyBackForwardList,
          [],
        ),
        returnValue: _i7.Future<_i4.WebHistory?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.WebHistory?>.value(),
      ) as _i7.Future<_i4.WebHistory?>);

  @override
  _i7.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> findAllAsync({required String? find}) => (super.noSuchMethod(
        Invocation.method(
          #findAllAsync,
          [],
          {#find: find},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> findNext({required bool? forward}) => (super.noSuchMethod(
        Invocation.method(
          #findNext,
          [],
          {#forward: forward},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearMatches() => (super.noSuchMethod(
        Invocation.method(
          #clearMatches,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String> getTRexRunnerHtml() => (super.noSuchMethod(
        Invocation.method(
          #getTRexRunnerHtml,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getTRexRunnerHtml,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getTRexRunnerHtml,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<String> getTRexRunnerCss() => (super.noSuchMethod(
        Invocation.method(
          #getTRexRunnerCss,
          [],
        ),
        returnValue: _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getTRexRunnerCss,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getTRexRunnerCss,
            [],
          ),
        )),
      ) as _i7.Future<String>);

  @override
  _i7.Future<void> scrollTo({
    required int? x,
    required int? y,
    bool? animated = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scrollTo,
          [],
          {
            #x: x,
            #y: y,
            #animated: animated,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> scrollBy({
    required int? x,
    required int? y,
    bool? animated = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #scrollBy,
          [],
          {
            #x: x,
            #y: y,
            #animated: animated,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> pauseTimers() => (super.noSuchMethod(
        Invocation.method(
          #pauseTimers,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> resumeTimers() => (super.noSuchMethod(
        Invocation.method(
          #resumeTimers,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i10.PrintJobController?> printCurrentPage(
          {_i4.PrintJobSettings? settings}) =>
      (super.noSuchMethod(
        Invocation.method(
          #printCurrentPage,
          [],
          {#settings: settings},
        ),
        returnValue: _i7.Future<_i10.PrintJobController?>.value(),
        returnValueForMissingStub: _i7.Future<_i10.PrintJobController?>.value(),
      ) as _i7.Future<_i10.PrintJobController?>);

  @override
  _i7.Future<int?> getContentHeight() => (super.noSuchMethod(
        Invocation.method(
          #getContentHeight,
          [],
        ),
        returnValue: _i7.Future<int?>.value(),
        returnValueForMissingStub: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<int?> getContentWidth() => (super.noSuchMethod(
        Invocation.method(
          #getContentWidth,
          [],
        ),
        returnValue: _i7.Future<int?>.value(),
        returnValueForMissingStub: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<void> zoomBy({
    required double? zoomFactor,
    bool? iosAnimated,
    bool? animated = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #zoomBy,
          [],
          {
            #zoomFactor: zoomFactor,
            #iosAnimated: iosAnimated,
            #animated: animated,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.WebUri?> getOriginalUrl() => (super.noSuchMethod(
        Invocation.method(
          #getOriginalUrl,
          [],
        ),
        returnValue: _i7.Future<_i4.WebUri?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.WebUri?>.value(),
      ) as _i7.Future<_i4.WebUri?>);

  @override
  _i7.Future<double?> getZoomScale() => (super.noSuchMethod(
        Invocation.method(
          #getZoomScale,
          [],
        ),
        returnValue: _i7.Future<double?>.value(),
        returnValueForMissingStub: _i7.Future<double?>.value(),
      ) as _i7.Future<double?>);

  @override
  _i7.Future<double?> getScale() => (super.noSuchMethod(
        Invocation.method(
          #getScale,
          [],
        ),
        returnValue: _i7.Future<double?>.value(),
        returnValueForMissingStub: _i7.Future<double?>.value(),
      ) as _i7.Future<double?>);

  @override
  _i7.Future<String?> getSelectedText() => (super.noSuchMethod(
        Invocation.method(
          #getSelectedText,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<_i4.InAppWebViewHitTestResult?> getHitTestResult() =>
      (super.noSuchMethod(
        Invocation.method(
          #getHitTestResult,
          [],
        ),
        returnValue: _i7.Future<_i4.InAppWebViewHitTestResult?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.InAppWebViewHitTestResult?>.value(),
      ) as _i7.Future<_i4.InAppWebViewHitTestResult?>);

  @override
  _i7.Future<void> clearFocus() => (super.noSuchMethod(
        Invocation.method(
          #clearFocus,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setContextMenu(_i4.ContextMenu? contextMenu) =>
      (super.noSuchMethod(
        Invocation.method(
          #setContextMenu,
          [contextMenu],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.RequestFocusNodeHrefResult?> requestFocusNodeHref() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestFocusNodeHref,
          [],
        ),
        returnValue: _i7.Future<_i4.RequestFocusNodeHrefResult?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.RequestFocusNodeHrefResult?>.value(),
      ) as _i7.Future<_i4.RequestFocusNodeHrefResult?>);

  @override
  _i7.Future<_i4.RequestImageRefResult?> requestImageRef() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestImageRef,
          [],
        ),
        returnValue: _i7.Future<_i4.RequestImageRefResult?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.RequestImageRefResult?>.value(),
      ) as _i7.Future<_i4.RequestImageRefResult?>);

  @override
  _i7.Future<List<_i4.MetaTag>> getMetaTags() => (super.noSuchMethod(
        Invocation.method(
          #getMetaTags,
          [],
        ),
        returnValue: _i7.Future<List<_i4.MetaTag>>.value(<_i4.MetaTag>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i4.MetaTag>>.value(<_i4.MetaTag>[]),
      ) as _i7.Future<List<_i4.MetaTag>>);

  @override
  _i7.Future<_i11.Color?> getMetaThemeColor() => (super.noSuchMethod(
        Invocation.method(
          #getMetaThemeColor,
          [],
        ),
        returnValue: _i7.Future<_i11.Color?>.value(),
        returnValueForMissingStub: _i7.Future<_i11.Color?>.value(),
      ) as _i7.Future<_i11.Color?>);

  @override
  _i7.Future<int?> getScrollX() => (super.noSuchMethod(
        Invocation.method(
          #getScrollX,
          [],
        ),
        returnValue: _i7.Future<int?>.value(),
        returnValueForMissingStub: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<int?> getScrollY() => (super.noSuchMethod(
        Invocation.method(
          #getScrollY,
          [],
        ),
        returnValue: _i7.Future<int?>.value(),
        returnValueForMissingStub: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i7.Future<_i4.SslCertificate?> getCertificate() => (super.noSuchMethod(
        Invocation.method(
          #getCertificate,
          [],
        ),
        returnValue: _i7.Future<_i4.SslCertificate?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.SslCertificate?>.value(),
      ) as _i7.Future<_i4.SslCertificate?>);

  @override
  _i7.Future<void> addUserScript({required _i4.UserScript? userScript}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserScript,
          [],
          {#userScript: userScript},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addUserScripts(
          {required List<_i4.UserScript>? userScripts}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserScripts,
          [],
          {#userScripts: userScripts},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> removeUserScript({required _i4.UserScript? userScript}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserScript,
          [],
          {#userScript: userScript},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> removeUserScriptsByGroupName({required String? groupName}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserScriptsByGroupName,
          [],
          {#groupName: groupName},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeUserScripts(
          {required List<_i4.UserScript>? userScripts}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserScripts,
          [],
          {#userScripts: userScripts},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeAllUserScripts() => (super.noSuchMethod(
        Invocation.method(
          #removeAllUserScripts,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool hasUserScript({required _i4.UserScript? userScript}) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasUserScript,
          [],
          {#userScript: userScript},
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<_i4.CallAsyncJavaScriptResult?> callAsyncJavaScript({
    required String? functionBody,
    Map<String, dynamic>? arguments = const {},
    _i4.ContentWorld? contentWorld,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #callAsyncJavaScript,
          [],
          {
            #functionBody: functionBody,
            #arguments: arguments,
            #contentWorld: contentWorld,
          },
        ),
        returnValue: _i7.Future<_i4.CallAsyncJavaScriptResult?>.value(),
        returnValueForMissingStub:
            _i7.Future<_i4.CallAsyncJavaScriptResult?>.value(),
      ) as _i7.Future<_i4.CallAsyncJavaScriptResult?>);

  @override
  _i7.Future<String?> saveWebArchive({
    required String? filePath,
    bool? autoname = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWebArchive,
          [],
          {
            #filePath: filePath,
            #autoname: autoname,
          },
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<bool> isSecureContext() => (super.noSuchMethod(
        Invocation.method(
          #isSecureContext,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<_i12.WebMessageChannel?> createWebMessageChannel() =>
      (super.noSuchMethod(
        Invocation.method(
          #createWebMessageChannel,
          [],
        ),
        returnValue: _i7.Future<_i12.WebMessageChannel?>.value(),
        returnValueForMissingStub: _i7.Future<_i12.WebMessageChannel?>.value(),
      ) as _i7.Future<_i12.WebMessageChannel?>);

  @override
  _i7.Future<void> postWebMessage({
    required _i4.WebMessage? message,
    _i4.WebUri? targetOrigin,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postWebMessage,
          [],
          {
            #message: message,
            #targetOrigin: targetOrigin,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addWebMessageListener(
          _i12.WebMessageListener? webMessageListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addWebMessageListener,
          [webMessageListener],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool hasWebMessageListener(_i12.WebMessageListener? webMessageListener) =>
      (super.noSuchMethod(
        Invocation.method(
          #hasWebMessageListener,
          [webMessageListener],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<bool> canScrollVertically() => (super.noSuchMethod(
        Invocation.method(
          #canScrollVertically,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> canScrollHorizontally() => (super.noSuchMethod(
        Invocation.method(
          #canScrollHorizontally,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> startSafeBrowsing() => (super.noSuchMethod(
        Invocation.method(
          #startSafeBrowsing,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> clearSslPreferences() => (super.noSuchMethod(
        Invocation.method(
          #clearSslPreferences,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> pause() => (super.noSuchMethod(
        Invocation.method(
          #pause,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> resume() => (super.noSuchMethod(
        Invocation.method(
          #resume,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> pageDown({required bool? bottom}) => (super.noSuchMethod(
        Invocation.method(
          #pageDown,
          [],
          {#bottom: bottom},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> pageUp({required bool? top}) => (super.noSuchMethod(
        Invocation.method(
          #pageUp,
          [],
          {#top: top},
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> zoomIn() => (super.noSuchMethod(
        Invocation.method(
          #zoomIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> zoomOut() => (super.noSuchMethod(
        Invocation.method(
          #zoomOut,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> clearHistory() => (super.noSuchMethod(
        Invocation.method(
          #clearHistory,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> reloadFromOrigin() => (super.noSuchMethod(
        Invocation.method(
          #reloadFromOrigin,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i8.Uint8List?> createPdf({
    _i4.IOSWKPDFConfiguration? iosWKPdfConfiguration,
    _i4.PDFConfiguration? pdfConfiguration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPdf,
          [],
          {
            #iosWKPdfConfiguration: iosWKPdfConfiguration,
            #pdfConfiguration: pdfConfiguration,
          },
        ),
        returnValue: _i7.Future<_i8.Uint8List?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.Uint8List?>.value(),
      ) as _i7.Future<_i8.Uint8List?>);

  @override
  _i7.Future<_i8.Uint8List?> createWebArchiveData() => (super.noSuchMethod(
        Invocation.method(
          #createWebArchiveData,
          [],
        ),
        returnValue: _i7.Future<_i8.Uint8List?>.value(),
        returnValueForMissingStub: _i7.Future<_i8.Uint8List?>.value(),
      ) as _i7.Future<_i8.Uint8List?>);

  @override
  _i7.Future<bool> hasOnlySecureContent() => (super.noSuchMethod(
        Invocation.method(
          #hasOnlySecureContent,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> pauseAllMediaPlayback() => (super.noSuchMethod(
        Invocation.method(
          #pauseAllMediaPlayback,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setAllMediaPlaybackSuspended({required bool? suspended}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAllMediaPlaybackSuspended,
          [],
          {#suspended: suspended},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> closeAllMediaPresentations() => (super.noSuchMethod(
        Invocation.method(
          #closeAllMediaPresentations,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.MediaPlaybackState?> requestMediaPlaybackState() =>
      (super.noSuchMethod(
        Invocation.method(
          #requestMediaPlaybackState,
          [],
        ),
        returnValue: _i7.Future<_i4.MediaPlaybackState?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.MediaPlaybackState?>.value(),
      ) as _i7.Future<_i4.MediaPlaybackState?>);

  @override
  _i7.Future<bool> isInFullscreen() => (super.noSuchMethod(
        Invocation.method(
          #isInFullscreen,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> clearFormData() => (super.noSuchMethod(
        Invocation.method(
          #clearFormData,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.MediaCaptureState?> getCameraCaptureState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCameraCaptureState,
          [],
        ),
        returnValue: _i7.Future<_i4.MediaCaptureState?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.MediaCaptureState?>.value(),
      ) as _i7.Future<_i4.MediaCaptureState?>);

  @override
  _i7.Future<void> setCameraCaptureState(
          {required _i4.MediaCaptureState? state}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCameraCaptureState,
          [],
          {#state: state},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i4.MediaCaptureState?> getMicrophoneCaptureState() =>
      (super.noSuchMethod(
        Invocation.method(
          #getMicrophoneCaptureState,
          [],
        ),
        returnValue: _i7.Future<_i4.MediaCaptureState?>.value(),
        returnValueForMissingStub: _i7.Future<_i4.MediaCaptureState?>.value(),
      ) as _i7.Future<_i4.MediaCaptureState?>);

  @override
  _i7.Future<void> setMicrophoneCaptureState(
          {required _i4.MediaCaptureState? state}) =>
      (super.noSuchMethod(
        Invocation.method(
          #setMicrophoneCaptureState,
          [],
          {#state: state},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadSimulatedRequest({
    required _i4.URLRequest? urlRequest,
    required _i8.Uint8List? data,
    _i4.URLResponse? urlResponse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadSimulatedRequest,
          [],
          {
            #urlRequest: urlRequest,
            #data: data,
            #urlResponse: urlResponse,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> getIFrameId() => (super.noSuchMethod(
        Invocation.method(
          #getIFrameId,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  void dispose({bool? isKeepAlive = false}) => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
          {#isKeepAlive: isKeepAlive},
        ),
        returnValueForMissingStub: null,
      );
}
